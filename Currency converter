import requests

class CurrencyConverter:
    def __init__(self, api_key):
        self.api_key = api_key

    def get_exchange_rate(self, base_currency, target_currency):
        try:
            url = f'https://open.er-api.com/v6/latest/{base_currency}'
            response = requests.get(url)
            data = response.json()
            rate = data['rates'][target_currency]
            return rate
        except requests.exceptions.RequestException as e:
            print(f"Error fetching exchange rate: {e}")
            return None

    def convert_currency(self, base_currency, target_currency, amount):
        exchange_rate = self.get_exchange_rate(base_currency, target_currency)
        if exchange_rate is not None:
            converted_amount = amount * exchange_rate
            return converted_amount, exchange_rate
        return None, None

def main():
    try:
        api_key = '****************'  # actual api key should not to be share 
        converter = CurrencyConverter(api_key)

        base_currency = input("Enter the source currency code: ").upper()
        target_currency = input("Enter the target currency code: ").upper()
        amount = float(input(f"Enter the amount in {base_currency}: "))

        converted_amount, exchange_rate = converter.convert_currency(base_currency, target_currency, amount)

        if converted_amount is not None:
            print(f"{amount} {base_currency} is equal to {converted_amount:.2f} {target_currency}")
            print(f"Exchange rate used: 1 {base_currency} = {exchange_rate} {target_currency}")

    except ValueError:
        print("Invalid input. Please enter a numeric value.")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()
